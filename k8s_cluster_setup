1. 공통 (전 노드)
sudo modprobe br_netfilter


lsmod | grep br


cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF


cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF


sudo sysctl --system 


sudo swapoff -a


kubeadm, kubelet, kubectl 설치

sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
  
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


kubelet cgroup 드라이버 구성

sudo mkdir /etc/docker
cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF



Docker 재시작

sudo systemctl enable docker
sudo systemctl daemon-reload
sudo systemctl restart docker


 



2. 마스터 노드 init
kubeadm init
export KUBECONFIG=/etc/kubernetes/admin.conf


calico 설치

curl https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/calico.yaml -O
kubectl apply -f calico.yaml
https://projectcalico.docs.tigera.io/getting-started/kubernetes/self-managed-onprem/onpremises



확인

k get no 
k get po --all-namespaces





3. worker node join
sudo kubeadm reset
sudo kubeadm join blah blah (master node에서 kubeadm init시 나타나는 token)
